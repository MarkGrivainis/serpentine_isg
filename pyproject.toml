[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"


[project]
dependencies = ["rich==13.7.0",
'click>=8.1.7'
]
classifiers = [
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.6',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11', 
]
name = "serpentine_isg"
dynamic = ["version"]
license = { text = "MIT" }
readme = "README.rst"
requires-python = ">=3.8"
description = "A script to convert coordinates into a serpentine pattern"
keywords = ['serpentine_isg']
authors=[
    {name="Mark Grivainis", email="markgrivainis@gmail.com"}
]

[project.urls]
repository='https://github.com/markgrivainis/serpentine_isg'

[project.optional-dependencies]
dev = [
    "build==1.0.3",
    "bump-my-version==0.16.2",
    "watchdog==3.0.0",
    "nox==2023.4.22",
    "coverage==7.4.0",
    "Sphinx==7.2.6",
    "twine==4.0.2",
    "pytest==7.4.4",
    "ruff==0.1.13",
    "python-lsp-server==1.4.0",
    "pylsp-rope==0.1.11",
    "debugpy==1.8.0",
    "mypy==1.8.0",
    "bandit==1.7.6",
]
[project.scripts]
serpentine_isg = "serpentine_isg.cli:main"

[tool.setuptools.dynamic]
version = { attr = "serpentine_isg.__version__" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"serpentine_isg" = ["py.typed"]

[tool.bumpversion]
current_version = "0.1.0"
commit = true
tag = true

[[tool.bumpversion.files]]
filename = "src/serpentine_isg/__init__.py"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "docs",
    "node_modules",
    "venv",
    "./epay/tests",
    ".pyenv",
]

[tool.ruff.lint]
extend-select = [
  "ALL"
]
ignore = ["D203", "D212", "ISC001"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "INP001"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"


[tool.mypy]
python_version = "3.11"
files = ["src/serpentine_isg"]
show_error_codes = true
pretty = true
strict = true
local_partial_types = true
exclude = ["^tests/"]
warn_unreachable = true

[tool.pytest.ini_options]
pythonpath = ["src"]
